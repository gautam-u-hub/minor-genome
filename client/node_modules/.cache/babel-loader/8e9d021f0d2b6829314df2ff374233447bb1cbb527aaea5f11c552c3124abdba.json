{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pkg13\\\\Downloads\\\\Dgdrive3.0-main\\\\Dgdrive3.0-main\\\\client\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./FileUpload.css\";\nimport FormData from 'form-data';\n\n//import fs from 'fs'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = _ref => {\n  _s();\n  let {\n    contract,\n    account,\n    provider\n  } = _ref;\n  const [sourceModifierTableFile, setSourceModifierTableFile] = useState(null);\n  const [visibility, setVisibility] = useState('public');\n  const [submissionCategory, setSubmissionCategory] = useState('sequenced by submitter');\n  const [submissionReleaseDate, setSubmissionReleaseDate] = useState('');\n  const [sequenceMoleculeType, setSequenceMoleculeType] = useState('');\n  const [sequencingTechnology, setSequencingTechnology] = useState('');\n  const [researchDefinition, setResearchDefinition] = useState(\"\");\n  const [sequenceAuthors, setSequenceAuthors] = useState({\n    firstName: \"\",\n    lastName: \"\"\n  });\n  const [publicationStatus, setPublicationStatus] = useState({\n    referenceTitle: \"\",\n    status: \"\"\n  });\n  const [contact, setContact] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  });\n  const handleubmit = event => {\n    event.preventDefault();\n    // Handle form submission here\n    console.log({\n      researchDefinition,\n      sequenceAuthors,\n      publicationStatus,\n      contact\n    });\n  };\n  const [file1, setFile] = useState(null);\n  const [fileName, setFileName] = useState(\"No image selected\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (file1) {\n      // try {\n      //   const formData = new FormData();\n      //   formData.append(\"file\", file);\n\n      //   const resFile = await axios({\n      //     method: \"post\",\n      //     url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\n      //     data: formData,\n      //     headers: {\n      //       pinata_api_key: `c7ebbf2b10f77afbe2c3`,\n      //       pinata_secret_api_key: `03a33ec76a37f6c618e37dfed6055e936581cf9c619b6d57e7877ebe349e1bde`,\n      //       \"Content-Type\": \"multipart/form-data\",\n      //       path:\"somename\",\n\n      //     },\n      //   });\n      //   const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\n      //   //const signer = contract.connect(provider.getSigner());\n      //   const signer = contract.connect(provider.getSigner());\n      //   signer.add(account, ImgHash);\n      //   alert(\"Successfully Image Uploaded\");\n      // } catch (e) {\n      //   console.log(e);\n      // }\n\n      const JWT = 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJjMzYxZmI3NC0wYmMwLTRmYmUtYjVlNi1mMThmMjVhZGNlMzciLCJlbWFpbCI6ImdhdXRhbTM0NTYzQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiI2OThmMzFiNzM1ZDIyNjllYWEwZiIsInNjb3BlZEtleVNlY3JldCI6ImRiYTU0NWNiMDE4ZWU1ZDZjOGViYzYzNmMxNmVmMWQ5NzlkMDFiZTVkMWM2ODI2ZTFkNzZiMWVlMGRlYzNiMzIiLCJpYXQiOjE2Nzc1NDYyNDl9.G2lX8OeZTtm0ZR9LrN31TBKWLqng0denA3TVg-17_5Q';\n      const formData = new FormData();\n      const src = file1;\n\n      //const file = fs.createReadStream(src)\n      formData.append('file', src);\n      const metadata = JSON.stringify({\n        name: \"hbedh\"\n      });\n      formData.append('pinataMetadata', metadata);\n      const options = JSON.stringify({\n        cidVersion: 0\n      });\n      formData.append('pinataOptions', options);\n      try {\n        const resFile = await axios.post(\"https://api.pinata.cloud/pinning/pinFileToIPFS\", formData, {\n          maxBodyLength: \"Infinity\",\n          headers: {\n            'Content-Type': `multipart/form-data; boundary=${formData._boundary}`,\n            Authorization: JWT\n          }\n        });\n        console.log(resFile.data);\n        const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\n        const signer = contract.connect(provider.getSigner());\n        signer.add(account, ImgHash);\n        alert(\"Successfully Image Uploaded\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    setFileName(\"No image selected\");\n    setFile(null);\n  };\n  const retrieveFile = e => {\n    const data = e.target.files[0]; //files array of files object\n    // console.log(data);\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(data);\n    reader.onloadend = () => {\n      setFile(e.target.files[0]);\n    };\n    setFileName(e.target.files[0].name);\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"choose\",\n        children: \"Choose File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        disabled: !account,\n        type: \"file\",\n        id: \"file-upload\",\n        name: \"data\",\n        onChange: retrieveFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"textArea\",\n        children: [\"Image: \", fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload\",\n        disabled: !file1,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"visibility\",\n          children: \"Visibility\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"visibility\",\n          value: visibility,\n          onChange: event => setVisibility(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"public\",\n            children: \"Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"private\",\n            children: \"Private\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Submission category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sequencedBySubmitter\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"sequencedBySubmitter\",\n              name: \"submissionCategory\",\n              value: \"sequenced by submitter\",\n              checked: submissionCategory === 'sequenced by submitter',\n              onChange: event => setSubmissionCategory(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this), \"Sequenced by submitter\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"derivedFromOtherData\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"derivedFromOtherData\",\n              name: \"submissionCategory\",\n              value: \"derived from other data\",\n              checked: submissionCategory === 'derived from other data',\n              onChange: event => setSubmissionCategory(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this), \"Derived from other data\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"submissionReleaseDate\",\n          children: \"Submission release date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"submissionReleaseDate\",\n          value: submissionReleaseDate,\n          onChange: event => setSubmissionReleaseDate(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sequenceMoleculeType\",\n          children: \"Sequence (molecule type, topology)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"sequenceMoleculeType\",\n          value: sequenceMoleculeType,\n          onChange: event => setSequenceMoleculeType(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sequencingTechnology\",\n          children: \"Sequencing technology\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"sequencingTechnology\",\n          value: sequencingTechnology,\n          onChange: event => setSequencingTechnology(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Research definition\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: researchDefinition,\n          onChange: event => setResearchDefinition(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sequence authors (first name, last name)\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: sequenceAuthors.firstName,\n          onChange: event => setSequenceAuthors(prevState => ({\n            ...prevState,\n            firstName: event.target.value\n          })),\n          placeholder: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: sequenceAuthors.lastName,\n          onChange: event => setSequenceAuthors(prevState => ({\n            ...prevState,\n            lastName: event.target.value\n          })),\n          placeholder: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Publication status (reference title, status)\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: publicationStatus.referenceTitle,\n          onChange: event => setPublicationStatus(prevState => ({\n            ...prevState,\n            referenceTitle: event.target.value\n          })),\n          placeholder: \"Reference Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: publicationStatus.status,\n          onChange: event => setPublicationStatus(prevState => ({\n            ...prevState,\n            status: event.target.value\n          })),\n          placeholder: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Contact (first name, last name, email)\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: contact.firstName,\n          onChange: event => setContact(prevState => ({\n            ...prevState,\n            firstName: event.target.value\n          })),\n          placeholder: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: contact.lastName,\n          onChange: event => setContact(prevState => ({\n            ...prevState,\n            lastName: event.target.value\n          })),\n          placeholder: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: contact.email,\n          onChange: event => setContact(prevState => ({\n            ...prevState,\n            email: event.target.value\n          })),\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"pnZoXwFusNRd/dzmA1wfTiLiD38=\");\n_c = FileUpload;\nexport default FileUpload;\n\n// import { useState } from \"react\";\n// import axios from \"axios\";\n// import \"./FileUpload.css\";\n// function FileUpload({ contract, provider, account }) {\n//   // const [urlArr, setUrlArr] = useState([]);\n//   const [file, setFile] = useState(null);\n//   const [fileName, setFileName] = useState(\"No image selected\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       if (file) {\n//         try {\n//           const formData = new FormData();\n//           formData.append(\"file\", file);\n\n//           const resFile = await axios({\n//             method: \"post\",\n//             url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\n//             data: formData,\n//             headers: {\n//               pinata_api_key: `95f328a012f1634eab8b`,\n//               pinata_secret_api_key: `8ea64e6b39c91631c66128a7c0e0dde35a6fbdf797a8393cc5ba8bf8d58e9b54`,\n//               \"Content-Type\": \"multipart/form-data\",\n//             },\n//           });\n\n//           const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\n//           const signer = contract.connect(provider.getSigner());\n//           signer.add(account, ImgHash);\n\n//           //setUrlArr((prev) => [...prev, ImgHash]);\n\n//           //Take a look at your Pinata Pinned section, you will see a new file added to you list.\n//         } catch (error) {\n//           alert(\"Error sending File to IPFS\");\n//           console.log(error);\n//         }\n//       }\n\n//       alert(\"Successfully Uploaded\");\n//       setFileName(\"No image selected\");\n//       setFile(null); //to again disable the upload button after upload\n//     } catch (error) {\n//       console.log(error.message); //this mostly occurse when net is not working\n//     }\n//   };\n//   const retrieveFile = (e) => {\n//     const data = e.target.files[0];\n//     console.log(data);\n\n//     const reader = new window.FileReader();\n\n//     reader.readAsArrayBuffer(data);\n//     reader.onloadend = () => {\n//       setFile(e.target.files[0]);\n//     };\n//     setFileName(e.target.files[0].name);\n//     e.preventDefault();\n//   };\n//   return (\n//     <div className=\"top\">\n//       <form className=\"form\" onSubmit={handleSubmit}>\n//         <label htmlFor=\"file-upload\" className=\"choose\">\n//           {/*turn around for avoding choose file */}\n//           Choose Image\n//         </label>\n//         <input\n//           disabled={!account} //disabling button when metamask account is not connected\n//           type=\"file\"\n//           id=\"file-upload\"\n//           name=\"data\"\n//           onChange={retrieveFile}\n//         />\n//         <span className=\"textArea\">Image: {fileName}</span>\n//         {/* choose file */}\n//         <button type=\"submit\" disabled={!file} className=\"upload\">\n//           Upload file\n//         </button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["useState","axios","FormData","FileUpload","contract","account","provider","sourceModifierTableFile","setSourceModifierTableFile","visibility","setVisibility","submissionCategory","setSubmissionCategory","submissionReleaseDate","setSubmissionReleaseDate","sequenceMoleculeType","setSequenceMoleculeType","sequencingTechnology","setSequencingTechnology","researchDefinition","setResearchDefinition","sequenceAuthors","setSequenceAuthors","firstName","lastName","publicationStatus","setPublicationStatus","referenceTitle","status","contact","setContact","email","handleubmit","event","preventDefault","console","log","file1","setFile","fileName","setFileName","handleSubmit","e","JWT","formData","src","append","metadata","JSON","stringify","name","options","cidVersion","resFile","post","maxBodyLength","headers","_boundary","Authorization","data","ImgHash","IpfsHash","signer","connect","getSigner","add","alert","error","retrieveFile","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","value","prevState"],"sources":["C:/Users/pkg13/Downloads/Dgdrive3.0-main/Dgdrive3.0-main/client/src/components/FileUpload.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./FileUpload.css\";\r\nimport FormData from 'form-data'\r\n\r\n//import fs from 'fs'\r\nconst FileUpload = ({ contract, account, provider }) => {\r\n   const [sourceModifierTableFile, setSourceModifierTableFile] = useState(null);\r\n  const [visibility, setVisibility] = useState('public');\r\n  const [submissionCategory, setSubmissionCategory] = useState('sequenced by submitter');\r\n  const [submissionReleaseDate, setSubmissionReleaseDate] = useState('');\r\n  const [sequenceMoleculeType, setSequenceMoleculeType] = useState('');\r\n  const [sequencingTechnology, setSequencingTechnology] = useState('');\r\n  const [researchDefinition, setResearchDefinition] = useState(\"\");\r\n  const [sequenceAuthors, setSequenceAuthors] = useState({ firstName: \"\", lastName: \"\" });\r\n  const [publicationStatus, setPublicationStatus] = useState({ referenceTitle: \"\", status: \"\" });\r\n  const [contact, setContact] = useState({ firstName: \"\", lastName: \"\", email: \"\" });\r\n\r\n\r\n  const handleubmit = (event) => {\r\n    event.preventDefault();\r\n    // Handle form submission here\r\n    console.log({\r\n      researchDefinition,\r\n      sequenceAuthors,\r\n      publicationStatus,\r\n      contact,\r\n    });\r\n  };\r\n  const [file1, setFile] = useState(null);\r\n  const [fileName, setFileName] = useState(\"No image selected\");\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (file1) {\r\n      // try {\r\n      //   const formData = new FormData();\r\n      //   formData.append(\"file\", file);\r\n\r\n      //   const resFile = await axios({\r\n      //     method: \"post\",\r\n      //     url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n      //     data: formData,\r\n      //     headers: {\r\n      //       pinata_api_key: `c7ebbf2b10f77afbe2c3`,\r\n      //       pinata_secret_api_key: `03a33ec76a37f6c618e37dfed6055e936581cf9c619b6d57e7877ebe349e1bde`,\r\n      //       \"Content-Type\": \"multipart/form-data\",\r\n      //       path:\"somename\",\r\n            \r\n      //     },\r\n      //   });\r\n      //   const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n      //   //const signer = contract.connect(provider.getSigner());\r\n      //   const signer = contract.connect(provider.getSigner());\r\n      //   signer.add(account, ImgHash);\r\n      //   alert(\"Successfully Image Uploaded\");\r\n      // } catch (e) {\r\n      //   console.log(e);\r\n      // }\r\n\r\n              const JWT = 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJjMzYxZmI3NC0wYmMwLTRmYmUtYjVlNi1mMThmMjVhZGNlMzciLCJlbWFpbCI6ImdhdXRhbTM0NTYzQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJwaW5fcG9saWN5Ijp7InJlZ2lvbnMiOlt7ImlkIjoiRlJBMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfSx7ImlkIjoiTllDMSIsImRlc2lyZWRSZXBsaWNhdGlvbkNvdW50IjoxfV0sInZlcnNpb24iOjF9LCJtZmFfZW5hYmxlZCI6ZmFsc2UsInN0YXR1cyI6IkFDVElWRSJ9LCJhdXRoZW50aWNhdGlvblR5cGUiOiJzY29wZWRLZXkiLCJzY29wZWRLZXlLZXkiOiI2OThmMzFiNzM1ZDIyNjllYWEwZiIsInNjb3BlZEtleVNlY3JldCI6ImRiYTU0NWNiMDE4ZWU1ZDZjOGViYzYzNmMxNmVmMWQ5NzlkMDFiZTVkMWM2ODI2ZTFkNzZiMWVlMGRlYzNiMzIiLCJpYXQiOjE2Nzc1NDYyNDl9.G2lX8OeZTtm0ZR9LrN31TBKWLqng0denA3TVg-17_5Q'\r\n\r\n         \r\n              const formData = new FormData();\r\n              const src = file1;\r\n              \r\n              //const file = fs.createReadStream(src)\r\n              formData.append('file', src)\r\n              \r\n              const metadata = JSON.stringify({\r\n                name: \"hbedh\",\r\n              });\r\n              formData.append('pinataMetadata', metadata);\r\n              \r\n              const options = JSON.stringify({\r\n                cidVersion: 0,\r\n              })\r\n              formData.append('pinataOptions', options);\r\n              \r\n              try{\r\n                const resFile = await axios.post(\"https://api.pinata.cloud/pinning/pinFileToIPFS\", formData, {\r\n                  maxBodyLength: \"Infinity\",\r\n                  headers: {\r\n                    'Content-Type': `multipart/form-data; boundary=${formData._boundary}`,\r\n                    Authorization: JWT\r\n                  }\r\n                });\r\n                console.log(resFile.data);\r\n                const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n                const signer = contract.connect(provider.getSigner());\r\n                signer.add(account, ImgHash);\r\n                alert(\"Successfully Image Uploaded\");\r\n              } catch (error) {\r\n                console.log(error);\r\n              }\r\n\r\n          \r\n            \r\n          \r\n\r\n    }\r\n    \r\n    setFileName(\"No image selected\");\r\n    setFile(null);\r\n  };\r\n  const retrieveFile = (e) => {\r\n    const data = e.target.files[0]; //files array of files object\r\n    // console.log(data);\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(data);\r\n    reader.onloadend = () => {\r\n      setFile(e.target.files[0]);\r\n    };\r\n    setFileName(e.target.files[0].name);\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <div className=\"top\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"file-upload\" className=\"choose\">\r\n          Choose File\r\n        </label>\r\n        <input\r\n          disabled={!account}\r\n          type=\"file\"\r\n          id=\"file-upload\"\r\n          name=\"data\"\r\n          onChange={retrieveFile}\r\n        />\r\n        <span className=\"textArea\">Image: {fileName}</span>\r\n        <button type=\"submit\" className=\"upload\" disabled={!file1}>\r\n          Upload File\r\n        </button>\r\n      </form>\r\n      <form onSubmit={handleubmit}>\r\n\r\n      <div>\r\n        <label htmlFor=\"visibility\">Visibility</label>\r\n        <select id=\"visibility\" value={visibility} onChange={(event) => setVisibility(event.target.value)}>\r\n          <option value=\"public\">Public</option>\r\n          <option value=\"private\">Private</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label>Submission category</label>\r\n        <div>\r\n          <label htmlFor=\"sequencedBySubmitter\">\r\n            <input type=\"radio\" id=\"sequencedBySubmitter\" name=\"submissionCategory\" value=\"sequenced by submitter\" checked={submissionCategory === 'sequenced by submitter'} onChange={(event) => setSubmissionCategory(event.target.value)} />\r\n            Sequenced by submitter\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"derivedFromOtherData\">\r\n            <input type=\"radio\" id=\"derivedFromOtherData\" name=\"submissionCategory\" value=\"derived from other data\" checked={submissionCategory === 'derived from other data'} onChange={(event) => setSubmissionCategory(event.target.value)} />\r\n            Derived from other data\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"submissionReleaseDate\">Submission release date</label>\r\n        <input type=\"date\" id=\"submissionReleaseDate\" value={submissionReleaseDate} onChange={(event) => setSubmissionReleaseDate(event.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"sequenceMoleculeType\">Sequence (molecule type, topology)</label>\r\n        <input type=\"text\" id=\"sequenceMoleculeType\" value={sequenceMoleculeType} onChange={(event) => setSequenceMoleculeType(event.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"sequencingTechnology\">Sequencing technology</label>\r\n        <input type=\"text\" id=\"sequencingTechnology\" value={sequencingTechnology} onChange={(event) => setSequencingTechnology(event.target.value)} />\r\n      </div>\r\n\r\n      <label>\r\n        Research definition\r\n        <input type=\"text\" value={researchDefinition} onChange={(event) => setResearchDefinition(event.target.value)} />\r\n      </label>\r\n\r\n      <label>\r\n        Sequence authors (first name, last name)\r\n        <input\r\n          type=\"text\"\r\n          value={sequenceAuthors.firstName}\r\n          onChange={(event) => setSequenceAuthors((prevState) => ({ ...prevState, firstName: event.target.value }))}\r\n          placeholder=\"First Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={sequenceAuthors.lastName}\r\n          onChange={(event) => setSequenceAuthors((prevState) => ({ ...prevState, lastName: event.target.value }))}\r\n          placeholder=\"Last Name\"\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Publication status (reference title, status)\r\n        <input\r\n          type=\"text\"\r\n          value={publicationStatus.referenceTitle}\r\n          onChange={(event) =>\r\n            setPublicationStatus((prevState) => ({ ...prevState, referenceTitle: event.target.value }))\r\n          }\r\n          placeholder=\"Reference Title\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={publicationStatus.status}\r\n          onChange={(event) => setPublicationStatus((prevState) => ({ ...prevState, status: event.target.value }))}\r\n          placeholder=\"Status\"\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Contact (first name, last name, email)\r\n        <input\r\n          type=\"text\"\r\n          value={contact.firstName}\r\n          onChange={(event) => setContact((prevState) => ({ ...prevState, firstName: event.target.value }))}\r\n          placeholder=\"First Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={contact.lastName}\r\n          onChange={(event) => setContact((prevState) => ({ ...prevState, lastName: event.target.value }))}\r\n          placeholder=\"Last Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={contact.email}\r\n          onChange={(event) => setContact((prevState) => ({ ...prevState, email: event.target.value }))}\r\n          placeholder=\"Email\"\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Submit</button>\r\n\r\n\r\n\r\n\r\n      \r\n    </form>\r\n\r\n    </div>\r\n  );\r\n};\r\nexport default FileUpload;\r\n\r\n// import { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./FileUpload.css\";\r\n// function FileUpload({ contract, provider, account }) {\r\n//   // const [urlArr, setUrlArr] = useState([]);\r\n//   const [file, setFile] = useState(null);\r\n//   const [fileName, setFileName] = useState(\"No image selected\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       if (file) {\r\n//         try {\r\n//           const formData = new FormData();\r\n//           formData.append(\"file\", file);\r\n\r\n//           const resFile = await axios({\r\n//             method: \"post\",\r\n//             url: \"https://api.pinata.cloud/pinning/pinFileToIPFS\",\r\n//             data: formData,\r\n//             headers: {\r\n//               pinata_api_key: `95f328a012f1634eab8b`,\r\n//               pinata_secret_api_key: `8ea64e6b39c91631c66128a7c0e0dde35a6fbdf797a8393cc5ba8bf8d58e9b54`,\r\n//               \"Content-Type\": \"multipart/form-data\",\r\n//             },\r\n//           });\r\n\r\n//           const ImgHash = `ipfs://${resFile.data.IpfsHash}`;\r\n//           const signer = contract.connect(provider.getSigner());\r\n//           signer.add(account, ImgHash);\r\n\r\n//           //setUrlArr((prev) => [...prev, ImgHash]);\r\n\r\n//           //Take a look at your Pinata Pinned section, you will see a new file added to you list.\r\n//         } catch (error) {\r\n//           alert(\"Error sending File to IPFS\");\r\n//           console.log(error);\r\n//         }\r\n//       }\r\n\r\n//       alert(\"Successfully Uploaded\");\r\n//       setFileName(\"No image selected\");\r\n//       setFile(null); //to again disable the upload button after upload\r\n//     } catch (error) {\r\n//       console.log(error.message); //this mostly occurse when net is not working\r\n//     }\r\n//   };\r\n//   const retrieveFile = (e) => {\r\n//     const data = e.target.files[0];\r\n//     console.log(data);\r\n\r\n//     const reader = new window.FileReader();\r\n\r\n//     reader.readAsArrayBuffer(data);\r\n//     reader.onloadend = () => {\r\n//       setFile(e.target.files[0]);\r\n//     };\r\n//     setFileName(e.target.files[0].name);\r\n//     e.preventDefault();\r\n//   };\r\n//   return (\r\n//     <div className=\"top\">\r\n//       <form className=\"form\" onSubmit={handleSubmit}>\r\n//         <label htmlFor=\"file-upload\" className=\"choose\">\r\n//           {/*turn around for avoding choose file */}\r\n//           Choose Image\r\n//         </label>\r\n//         <input\r\n//           disabled={!account} //disabling button when metamask account is not connected\r\n//           type=\"file\"\r\n//           id=\"file-upload\"\r\n//           name=\"data\"\r\n//           onChange={retrieveFile}\r\n//         />\r\n//         <span className=\"textArea\">Image: {fileName}</span>\r\n//         {/* choose file */}\r\n//         <button type=\"submit\" disabled={!file} className=\"upload\">\r\n//           Upload file\r\n//         </button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default FileUpload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}